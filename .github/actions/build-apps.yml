name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Release on All Platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - platform: android
            os: ubuntu-latest
          - platform: ios
            os: macos-latest
          - platform: macos
            os: macos-latest
          - platform: windows
            os: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: "3.19.0"

      - name: Install Dependencies
        run: flutter pub get

      - name: Build ${{ matrix.platform }}
        run: |
          if [ "${{ matrix.platform }}" == "android" ]; then
            flutter build apk --split-debug-info --obfuscate --release
          elif [ "${{ matrix.platform }}" == "ios" ]; then
            flutter build ios --split-debug-info --obfuscate --release
          elif [ "${{ matrix.platform }}" == "macos" ]; then
            flutter build macos --split-debug-info --obfuscate --release
          elif [ "${{ matrix.platform }}" == "windows" ]; then
            flutter build windows
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}-app
          path: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/ipa/*.ipa
            build/macos/Build/Products/Release/*.app
            build/windows/runner/Release/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/flutter-apk/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive
